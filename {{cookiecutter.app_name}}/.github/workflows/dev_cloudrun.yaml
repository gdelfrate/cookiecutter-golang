name: {{cookiecutter.app_name}}
on:
  push:
    branches:
      - 'dev'
  pull_request:
    branches:
      - 'dev'
env:
  GITHUB_SHA: ${{ github.sha }}
  PROJECT_ID: ${{ secrets.DEV_GCLOUD_PROJECT_ID }}
  APP_NAME: bet9ja-coupon-preprocessor
  IMAGE: gcr.io/${{ secrets.DEV_GCLOUD_PROJECT_ID }}
  REGION: europe-west1
  INSTANCES: 5
  CPU: 2
  MEM: 256M
  TIMEOUT: 600
  VPC_CONNECTOR: datalayer
  SVC_ACCOUNT: coupon-preprocessor@${{ secrets.DEV_GCLOUD_PROJECT_ID }}.iam.gserviceaccount.com

jobs:
  test:
    strategy:
      matrix:
        go-version: [ 1.16.x ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Test
        run: go test -v ./... -run=Unit

  buildandpush:
    name: Build and push image
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-18.04 ]
        #ython-version: [ 3.7 ]
    steps:
      - name: Fetch code
        uses: actions/checkout@v2

      - uses: google-github-actions/setup-gcloud@master
        with:
          version: 'latest'
          project_id: ${{ secrets.DEV_GCLOUD_PROJECT_ID }}
          service_account_email: ${{ secrets.DEV_SA_EMAIL }}
          service_account_key: ${{ secrets.DEV_SA_KEY }}

      - name: Configure Docker
        run: gcloud auth configure-docker --quiet

      - name: Build Docker image
        run: docker build . -t $IMAGE/$APP_NAME:$GITHUB_SHA

      - name: Push Docker image
        run: docker push $IMAGE/$APP_NAME:$GITHUB_SHA

  deploy:
    name: Deploy application
    needs: [test,buildandpush]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-18.04 ]
        #ython-version: [ 3.7 ]
    steps:
      - name: Fetch code
        uses: actions/checkout@v2

      - uses: google-github-actions/setup-gcloud@master
        with:
          version: 'latest'
          project_id: ${{ secrets.DEV_GCLOUD_PROJECT_ID }}
          service_account_email: ${{ secrets.DEV_SA_EMAIL }}
          service_account_key: ${{ secrets.DEV_SA_KEY }}

      - name: Retrieving Secrets and Deploy
        run: |
          LOG_LEVEL=$(gcloud secrets versions access latest --secret bet9ja_coupon_preprocessor_LOG_LEVEL )
          ENV=$(gcloud secrets versions access latest --secret bet9ja_coupon_preprocessor_ENV )
          REDIS_KEY_TTL=$(gcloud secrets versions access latest --secret bet9ja_coupon_preprocessor_REDIS_KEY_TTL )
          #KEY_FIELD=$(gcloud  secrets versions access latest --secret bet9ja_coupon_preprocessor_KEY_FIELD )
          REDIS_ADDRESS=$(gcloud secrets versions access latest --secret bet9ja_coupon_preprocessor_REDIS_ADDRESS )
          REDIS_DB=$(gcloud secrets versions access latest --secret bet9ja_coupon_preprocessor_REDIS_DB )
          LOY_TOPIC=$(gcloud secrets versions access latest --secret bet9ja_coupon_preprocessor_LOYALTIES_TOPIC )
          C_TOPIC=$(gcloud secrets versions access latest --secret bet9ja_coupon_preprocessor_COUPONS_TOPIC )
          OMS_PATH=$(gcloud secrets versions access latest --secret bet9ja_coupon_preprocessor_OMNIPARSER_SCHEMA_PATH )
          ####Deployment#####
          gcloud run deploy $APP_NAME --region $REGION \
            --image $IMAGE/$APP_NAME:$GITHUB_SHA \
            --no-allow-unauthenticated --platform managed --memory $MEM --max-instances $INSTANCES \
            --service-account $SVC_ACCOUNT \
            --vpc-connector $VPC_CONNECTOR \
            --cpu $CPU \
            --set-env-vars PROJECT_ID="$PROJECT_ID" \
            --set-env-vars REDIS_KEY_TTL="$REDIS_KEY_TTL" \
            --set-env-vars REDIS_ADDRESS="$REDIS_ADDRESS" \
            --set-env-vars LOG_LEVEL="$LOG_LEVEL",ENV="$ENV" \
            --set-env-vars REDIS_DB="$REDIS_DB" \
            --set-env-vars LOYALTIES_TOPIC="$LOY_TOPIC" \
            --set-env-vars COUPONS_TOPIC="$C_TOPIC" \
            --set-env-vars OMNIPARSER_SCHEMA_PATH="$OMS_PATH"
